<div class="flex flex-col items-center justify-start min-h-screen">
  <h1 class="text-4xl font-bold my-6 fixed top-0 w-full text-center py-4 bg-gray-800 text-white font-bold">学習時間記録</h1>
  <%= link_to '新しい記録を追加', new_study_time_record_path, data: { turbo: false }, class: "btn btn-success"%>
  <div class="flex flex-row max-w-4xl mx-auto mt-32 justify-start items-start" style="margin-top: 100px;">
    <div>
      <canvas id="study-time-chart" width="500" height="500"></canvas>
    </div>
    <div class="flex-1 overflow-auto">
      <% if @study_time_records.any? %>
        <table class="table-auto w-full text-center">
          <thead class="bg-gray-200">
            <tr>
              <th class="py-2 px-4">日付</th>
              <th class="py-2 px-4">学習時間</th>
              <th class="py-2 px-4">学習内容</th>
              <th class="py-2 px-4">コメント</th>
              <th class="py-2 px-4">アクション</th>
            </tr>
          </thead>
          <tbody id="study-time-records-table">
            <% @study_time_records.each do |record| %>
              <tr class="border-b">
                <td class="py-2 px-4"><%= record.study_date %></td>
                <td class="py-2 px-4"><%= record.duration %></td>
                <td class="py-2 px-4"><%= record.study_content %></td>
                <td class="py-2 px-4"><%= record.comment %></td>
                <td class="py-2 px-4">
                  <%= link_to '削除', study_time_record_path(record), method: :delete, data: { confirm: '本当に削除しますか？' }, class: 'btn btn-danger' %>
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>
      <% else %>
        <p>学習記録がありません。</p>
      <% end %>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  document.addEventListener('turbo:load', function() {
    if (document.getElementById('study-time-chart')) {
      fetchStudyTimeRecords();
    }
  });

  document.addEventListener('DOMContentLoaded', function() {
    if (document.getElementById('study-time-chart')) {
      fetchStudyTimeRecords();
    }
  });

  function fetchStudyTimeRecords() {
    fetch('/study_time_records/refresh')
      .then(response => response.json())
      .then(data => {
        drawChart(data);
        updateTable(data);
      })
      .catch(error => {
        console.error('Error fetching study time records:', error);
      });
  }

  function drawChart(studyRecords) {
    var canvasElement = document.getElementById('study-time-chart');
    if (!canvasElement) {
      console.error('Could not find canvas element.');
      return;
    }

    var ctx = canvasElement.getContext('2d');
    if (!ctx) {
      console.error('Could not get 2D context for canvas element.');
      return;
    }

    if (window.chartInstance) {
      window.chartInstance.destroy();
    }

    var labels = studyRecords.map(record => record.study_date);
    var data = studyRecords.map(record => record.duration);

    window.chartInstance = new Chart(ctx, {
      type: 'bar',
      data: {
        labels: labels,
        datasets: [{
          label: '学習時間 (分)',
          data: data,
          backgroundColor: 'rgba(75, 192, 192, 0.2)',
          borderColor: 'rgba(75, 192, 192, 1)',
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });
  }

  function updateTable(studyRecords) {
    var tableBody = document.getElementById('study-time-records-table');
    
    if (!tableBody) {
      console.error('Could not find table body element.');
      return;
    }

    tableBody.innerHTML = '';

    studyRecords.forEach(record => {
      var row = document.createElement('tr');
      row.classList.add('border-b');

      var dateCell = document.createElement('td');
      dateCell.classList.add('py-2', 'px-4');
      dateCell.innerText = record.study_date;

      var durationCell = document.createElement('td');
      durationCell.classList.add('py-2', 'px-4');
      durationCell.innerText = record.duration;

      var contentCell = document.createElement('td');
      contentCell.classList.add('py-2', 'px-4');
      contentCell.innerText = record.study_content;

      var commentCell = document.createElement('td');
      commentCell.classList.add('py-2', 'px-4');
      commentCell.innerText = record.comment;

      var actionCell = document.createElement('td');
      actionCell.classList.add('py-2', 'px-4');
      var deleteLink = document.createElement('a');
      deleteLink.href = `/study_time_records/${record.id}`;
      deleteLink.classList.add('btn', 'btn-danger');
      deleteLink.innerText = '削除';
      deleteLink.dataset.method = 'delete';
      deleteLink.dataset.confirm = '本当に削除しますか？';

      actionCell.appendChild(deleteLink);
      row.appendChild(dateCell);
      row.appendChild(durationCell);
      row.appendChild(contentCell);
      row.appendChild(commentCell);
      row.appendChild(actionCell);

      tableBody.appendChild(row);
    });
  }
</script>




