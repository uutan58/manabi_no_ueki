import*as e from"reusify";var n=e;try{"default"in e&&(n=e.default)}catch(e){}var r={};var u=n;function fastqueue(e,n,r){if(typeof e==="function"){r=n;n=e;e=null}if(!(r>=1))throw new Error("fastqueue concurrency must be equal to or greater than 1");var a=u(Task);var t=null;var l=null;var o=0;var i=null;var s={push:push,drain:noop,saturated:noop,pause:pause,paused:false,get concurrency(){return r},set concurrency(e){if(!(e>=1))throw new Error("fastqueue concurrency must be equal to or greater than 1");r=e;if(!s.paused)for(;t&&o<r;){o++;release()}},running:running,resume:resume,idle:idle,length:length,getQueue:getQueue,unshift:unshift,empty:noop,kill:kill,killAndDrain:killAndDrain,error:error};return s;function running(){return o}function pause(){s.paused=true}function length(){var e=t;var n=0;while(e){e=e.next;n++}return n}function getQueue(){var e=t;var n=[];while(e){n.push(e.value);e=e.next}return n}function resume(){if(s.paused){s.paused=false;if(t!==null)for(;t&&o<r;){o++;release()}else{o++;release()}}}function idle(){return o===0&&s.length()===0}function push(u,c){var f=a.get();f.context=e;f.release=release;f.value=u;f.callback=c||noop;f.errorHandler=i;if(o>=r||s.paused)if(l){l.next=f;l=f}else{t=f;l=f;s.saturated()}else{o++;n.call(e,f.value,f.worked)}}function unshift(u,c){var f=a.get();f.context=e;f.release=release;f.value=u;f.callback=c||noop;f.errorHandler=i;if(o>=r||s.paused)if(t){f.next=t;t=f}else{t=f;l=f;s.saturated()}else{o++;n.call(e,f.value,f.worked)}}function release(u){u&&a.release(u);var i=t;if(i&&o<=r)if(s.paused)o--;else{l===t&&(l=null);t=i.next;i.next=null;n.call(e,i.value,i.worked);l===null&&s.empty()}else--o===0&&s.drain()}function kill(){t=null;l=null;s.drain=noop}function killAndDrain(){t=null;l=null;s.drain();s.drain=noop}function error(e){i=e}}function noop(){}function Task(){this.value=null;this.callback=noop;this.next=null;this.release=noop;this.context=null;this.errorHandler=null;var e=this;this.worked=function worked(n,r){var u=e.callback;var a=e.errorHandler;var t=e.value;e.value=null;e.callback=noop;e.errorHandler&&a(n,t);u.call(e.context,n,r);e.release(e)}}function queueAsPromised(e,n,r){if(typeof e==="function"){r=n;n=e;e=null}function asyncWrapper(e,r){n.call(this,e).then((function(e){r(null,e)}),r)}var u=fastqueue(e,asyncWrapper,r);var a=u.push;var t=u.unshift;u.push=push;u.unshift=unshift;u.drained=drained;return u;function push(e){var n=new Promise((function(n,r){a(e,(function(e,u){e?r(e):n(u)}))}));n.catch(noop);return n}function unshift(e){var n=new Promise((function(n,r){t(e,(function(e,u){e?r(e):n(u)}))}));n.catch(noop);return n}function drained(){if(u.idle())return new Promise((function(e){e()}));var e=u.drain;var n=new Promise((function(n){u.drain=function(){e();n()}}));return n}}r=fastqueue;r.promise=queueAsPromised;var a=r;const t=r.promise;export{a as default,t as promise};

