import*as t from"@nodelib/fs.stat";import*as e from"run-parallel";import r from"process";import*as i from"path";import*as n from"fs";var a={};var s=r;Object.defineProperty(a,"__esModule",{value:true});a.IS_SUPPORT_READDIR_WITH_FILE_TYPES=void 0;const o=s.versions.node.split(".");if(void 0===o[0]||void 0===o[1])throw new Error(`Unexpected behavior. The 'process.versions.node' variable has invalid value: ${s.versions.node}`);const l=Number.parseInt(o[0],10);const c=Number.parseInt(o[1],10);const d=10;const u=10;const S=l>d;const f=l===d&&c>=u;a.IS_SUPPORT_READDIR_WITH_FILE_TYPES=S||f;var h={};Object.defineProperty(h,"__esModule",{value:true});h.createDirentFromStats=void 0;class DirentFromStats{constructor(t,e){this.name=t;this.isBlockDevice=e.isBlockDevice.bind(e);this.isCharacterDevice=e.isCharacterDevice.bind(e);this.isDirectory=e.isDirectory.bind(e);this.isFIFO=e.isFIFO.bind(e);this.isFile=e.isFile.bind(e);this.isSocket=e.isSocket.bind(e);this.isSymbolicLink=e.isSymbolicLink.bind(e)}}function createDirentFromStats(t,e){return new DirentFromStats(t,e)}h.createDirentFromStats=createDirentFromStats;var m={};Object.defineProperty(m,"__esModule",{value:true});m.fs=void 0;const p=h;m.fs=p;var y={};Object.defineProperty(y,"__esModule",{value:true});y.joinPathSegments=void 0;function joinPathSegments(t,e,r){return t.endsWith(r)?t+e:t+r+e}y.joinPathSegments=joinPathSegments;var _="default"in t?t.default:t;var b="default"in e?e.default:e;var v={};Object.defineProperty(v,"__esModule",{value:true});v.readdir=v.readdirWithFileTypes=v.read=void 0;const F=_;const k=b;const g=a;const T=m;const E=y;function read$1(t,e,r){e.stats||!g.IS_SUPPORT_READDIR_WITH_FILE_TYPES?readdir$1(t,e,r):readdirWithFileTypes$1(t,e,r)}v.read=read$1;function readdirWithFileTypes$1(t,e,r){e.fs.readdir(t,{withFileTypes:true},((i,n)=>{if(null!==i){callFailureCallback(r,i);return}const a=n.map((r=>({dirent:r,name:r.name,path:E.joinPathSegments(t,r.name,e.pathSegmentSeparator)})));if(!e.followSymbolicLinks){callSuccessCallback(r,a);return}const s=a.map((t=>makeRplTaskEntry(t,e)));k(s,((t,e)=>{null===t?callSuccessCallback(r,e):callFailureCallback(r,t)}))}))}v.readdirWithFileTypes=readdirWithFileTypes$1;function makeRplTaskEntry(t,e){return r=>{t.dirent.isSymbolicLink()?e.fs.stat(t.path,((i,n)=>{if(null===i){t.dirent=T.fs.createDirentFromStats(t.name,n);r(null,t)}else{if(e.throwErrorOnBrokenSymbolicLink){r(i);return}r(null,t)}})):r(null,t)}}function readdir$1(t,e,r){e.fs.readdir(t,((i,n)=>{if(null!==i){callFailureCallback(r,i);return}const a=n.map((r=>{const i=E.joinPathSegments(t,r,e.pathSegmentSeparator);return t=>{F.stat(i,e.fsStatSettings,((n,a)=>{if(null!==n){t(n);return}const s={name:r,path:i,dirent:T.fs.createDirentFromStats(r,a)};e.stats&&(s.stats=a);t(null,s)}))}}));k(a,((t,e)=>{null===t?callSuccessCallback(r,e):callFailureCallback(r,t)}))}))}v.readdir=readdir$1;function callFailureCallback(t,e){t(e)}function callSuccessCallback(t,e){t(null,e)}var P="default"in t?t.default:t;var D={};Object.defineProperty(D,"__esModule",{value:true});D.readdir=D.readdirWithFileTypes=D.read=void 0;const I=P;const L=a;const O=m;const w=y;function read(t,e){return!e.stats&&L.IS_SUPPORT_READDIR_WITH_FILE_TYPES?readdirWithFileTypes(t,e):readdir(t,e)}D.read=read;function readdirWithFileTypes(t,e){const r=e.fs.readdirSync(t,{withFileTypes:true});return r.map((r=>{const i={dirent:r,name:r.name,path:w.joinPathSegments(t,r.name,e.pathSegmentSeparator)};if(i.dirent.isSymbolicLink()&&e.followSymbolicLinks)try{const t=e.fs.statSync(i.path);i.dirent=O.fs.createDirentFromStats(i.name,t)}catch(t){if(e.throwErrorOnBrokenSymbolicLink)throw t}return i}))}D.readdirWithFileTypes=readdirWithFileTypes;function readdir(t,e){const r=e.fs.readdirSync(t);return r.map((r=>{const i=w.joinPathSegments(t,r,e.pathSegmentSeparator);const n=I.statSync(i,e.fsStatSettings);const a={name:r,path:i,dirent:O.fs.createDirentFromStats(r,n)};e.stats&&(a.stats=n);return a}))}D.readdir=readdir;var j="default"in n?n.default:n;var R={};Object.defineProperty(R,"__esModule",{value:true});R.createFileSystemAdapter=R.FILE_SYSTEM_ADAPTER=void 0;const A=j;R.FILE_SYSTEM_ADAPTER={lstat:A.lstat,stat:A.stat,lstatSync:A.lstatSync,statSync:A.statSync,readdir:A.readdir,readdirSync:A.readdirSync};function createFileSystemAdapter(t){return void 0===t?R.FILE_SYSTEM_ADAPTER:Object.assign(Object.assign({},R.FILE_SYSTEM_ADAPTER),t)}R.createFileSystemAdapter=createFileSystemAdapter;var W="default"in i?i.default:i;var M="default"in t?t.default:t;var C={};Object.defineProperty(C,"__esModule",{value:true});const $=W;const B=M;const Y=R;class Settings$1{constructor(t={}){this._options=t;this.followSymbolicLinks=this._getValue(this._options.followSymbolicLinks,false);this.fs=Y.createFileSystemAdapter(this._options.fs);this.pathSegmentSeparator=this._getValue(this._options.pathSegmentSeparator,$.sep);this.stats=this._getValue(this._options.stats,false);this.throwErrorOnBrokenSymbolicLink=this._getValue(this._options.throwErrorOnBrokenSymbolicLink,true);this.fsStatSettings=new B.Settings({followSymbolicLink:this.followSymbolicLinks,fs:this.fs,throwErrorOnBrokenSymbolicLink:this.throwErrorOnBrokenSymbolicLink})}_getValue(t,e){return null!==t&&void 0!==t?t:e}}C.default=Settings$1;var U={};Object.defineProperty(U,"__esModule",{value:true});U.Settings=U.scandirSync=U.scandir=void 0;const V=v;const H=D;const x=C;U.Settings=x.default;function scandir(t,e,r){"function"!==typeof e?V.read(t,getSettings(e),r):V.read(t,getSettings(),e)}U.scandir=scandir;function scandirSync(t,e){const r=getSettings(e);return H.read(t,r)}U.scandirSync=scandirSync;function getSettings(t={}){return t instanceof x.default?t:new x.default(t)}const N=U.__esModule,q=U.Settings;const z=U.scandirSync,G=U.scandir;export default U;export{q as Settings,N as __esModule,G as scandir,z as scandirSync};

